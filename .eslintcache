[{"D:\\projects\\SocialNetwork\\src\\redux\\store.tsx":"1","D:\\projects\\SocialNetwork\\src\\components\\Navbar\\Navbar.tsx":"2","D:\\projects\\SocialNetwork\\src\\App.tsx":"3","D:\\projects\\SocialNetwork\\src\\index.tsx":"4","D:\\projects\\SocialNetwork\\src\\components\\Header\\Header.tsx":"5","D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"6","D:\\projects\\SocialNetwork\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"7","D:\\projects\\SocialNetwork\\src\\components\\Profile\\Profile.tsx":"8","D:\\projects\\SocialNetwork\\src\\components\\Dialogs\\Dialogs.tsx":"9","D:\\projects\\SocialNetwork\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"10","D:\\projects\\SocialNetwork\\src\\redux\\dialogs-reducer.ts":"11","D:\\projects\\SocialNetwork\\src\\redux\\profile-reducer.ts":"12","D:\\projects\\SocialNetwork\\src\\components\\Dialogs\\MessageItem\\MessageItem.tsx":"13","D:\\projects\\SocialNetwork\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"14","D:\\projects\\SocialNetwork\\src\\components\\Dialogs\\DialogsContainer.tsx":"15","D:\\projects\\SocialNetwork\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"16","D:\\projects\\SocialNetwork\\src\\redux\\redux-store.ts":"17","D:\\projects\\SocialNetwork\\src\\redux\\users-reducer.ts":"18","D:\\projects\\SocialNetwork\\src\\components\\Users\\UsersContainer.tsx":"19","D:\\projects\\SocialNetwork\\src\\components\\Users\\Users.tsx":"20","D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileContainer.tsx":"21","D:\\projects\\SocialNetwork\\src\\components\\common\\Preloader\\Preloader.tsx":"22","D:\\projects\\SocialNetwork\\src\\redux\\auth-reducer.ts":"23","D:\\projects\\SocialNetwork\\src\\components\\Header\\HeaderContainer.tsx":"24","D:\\projects\\SocialNetwork\\src\\api\\api.ts":"25","D:\\projects\\SocialNetwork\\src\\redux\\action-creators.ts":"26","D:\\projects\\SocialNetwork\\src\\hoc\\withAuthRedirect.tsx":"27","D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\ProfileStatus\\ProfileStatus.tsx":"28","D:\\projects\\SocialNetwork\\src\\components\\common\\AddMessageForm\\AddMessageForm.tsx":"29","D:\\projects\\SocialNetwork\\src\\redux\\app-reducer.ts":"30","D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\ProfileStatus\\ProfileStatusFunctional.tsx":"31","D:\\projects\\SocialNetwork\\src\\redux\\selectors\\app-selectors.ts":"32","D:\\projects\\SocialNetwork\\src\\redux\\selectors\\profile-selectors.ts":"33","D:\\projects\\SocialNetwork\\src\\redux\\selectors\\auth-selectors.ts":"34","D:\\projects\\SocialNetwork\\src\\redux\\selectors\\users-selectors.ts":"35","D:\\projects\\SocialNetwork\\src\\utils\\object-helpers.ts":"36","D:\\projects\\SocialNetwork\\src\\components\\Login\\Login.tsx":"37","D:\\projects\\SocialNetwork\\src\\components\\common\\Paginator\\Paginator.tsx":"38","D:\\projects\\SocialNetwork\\src\\components\\Users\\User.tsx":"39","D:\\projects\\SocialNetwork\\src\\hoc\\withSuspense.tsx":"40","D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\UserDescription\\UserDescription.tsx":"41","D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\UserDescriptionForm\\UserDescriptionForm.tsx":"42","D:\\projects\\SocialNetwork\\src\\components\\common\\WebsiteIcon\\WebsiteIcon.tsx":"43","D:\\projects\\SocialNetwork\\src\\components\\common\\VkIcon\\VkIcon.tsx":"44","D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\UserDescription\\ContactsTable\\ContactsTable.tsx":"45","D:\\projects\\SocialNetwork\\src\\utils\\error-utils.ts":"46"},{"size":2822,"mtime":1613805542763,"results":"47","hashOfConfig":"48"},{"size":1374,"mtime":1622580259661,"results":"49","hashOfConfig":"50"},{"size":4228,"mtime":1623447594691,"results":"51","hashOfConfig":"50"},{"size":268,"mtime":1623182803017,"results":"52","hashOfConfig":"50"},{"size":705,"mtime":1623182657198,"results":"53","hashOfConfig":"50"},{"size":2070,"mtime":1622580259671,"results":"54","hashOfConfig":"50"},{"size":511,"mtime":1622840832452,"results":"55","hashOfConfig":"50"},{"size":613,"mtime":1623441140905,"results":"56","hashOfConfig":"50"},{"size":1676,"mtime":1623181093159,"results":"57","hashOfConfig":"50"},{"size":1559,"mtime":1622666107759,"results":"58","hashOfConfig":"50"},{"size":1608,"mtime":1622881650621,"results":"59","hashOfConfig":"50"},{"size":4031,"mtime":1622840492857,"results":"60","hashOfConfig":"50"},{"size":434,"mtime":1623104788297,"results":"61","hashOfConfig":"50"},{"size":574,"mtime":1619904328917,"results":"62","hashOfConfig":"50"},{"size":1428,"mtime":1622881454442,"results":"63","hashOfConfig":"50"},{"size":438,"mtime":1619904501144,"results":"64","hashOfConfig":"50"},{"size":914,"mtime":1620943567675,"results":"65","hashOfConfig":"50"},{"size":3697,"mtime":1620942596765,"results":"66","hashOfConfig":"50"},{"size":2935,"mtime":1622754337846,"results":"67","hashOfConfig":"50"},{"size":1446,"mtime":1623181797754,"results":"68","hashOfConfig":"50"},{"size":2978,"mtime":1622840492850,"results":"69","hashOfConfig":"50"},{"size":407,"mtime":1622754054784,"results":"70","hashOfConfig":"50"},{"size":2635,"mtime":1622751275342,"results":"71","hashOfConfig":"50"},{"size":1035,"mtime":1618726890074,"results":"72","hashOfConfig":"50"},{"size":2893,"mtime":1622674531402,"results":"73","hashOfConfig":"50"},{"size":2169,"mtime":1622881650621,"results":"74","hashOfConfig":"50"},{"size":812,"mtime":1618347892774,"results":"75","hashOfConfig":"50"},{"size":1438,"mtime":1617572355297,"results":"76","hashOfConfig":"48"},{"size":1267,"mtime":1623104095719,"results":"77","hashOfConfig":"50"},{"size":1273,"mtime":1622839382840,"results":"78","hashOfConfig":"50"},{"size":1166,"mtime":1622580259672,"results":"79","hashOfConfig":"50"},{"size":207,"mtime":1622839382825,"results":"80","hashOfConfig":"50"},{"size":426,"mtime":1622840109268,"results":"81","hashOfConfig":"50"},{"size":461,"mtime":1622580259684,"results":"82","hashOfConfig":"50"},{"size":741,"mtime":1620942596738,"results":"83","hashOfConfig":"50"},{"size":195,"mtime":1620941324870,"results":"84","hashOfConfig":"50"},{"size":3271,"mtime":1622751369171,"results":"85","hashOfConfig":"50"},{"size":1606,"mtime":1621210534309,"results":"86","hashOfConfig":"50"},{"size":1761,"mtime":1623182581951,"results":"87","hashOfConfig":"50"},{"size":404,"mtime":1622754054790,"results":"88","hashOfConfig":"50"},{"size":4069,"mtime":1623441438959,"results":"89","hashOfConfig":"50"},{"size":8195,"mtime":1622580259677,"results":"90","hashOfConfig":"50"},{"size":3382,"mtime":1622580259681,"results":"91","hashOfConfig":"50"},{"size":1854,"mtime":1622580259680,"results":"92","hashOfConfig":"50"},{"size":2096,"mtime":1622580259673,"results":"93","hashOfConfig":"50"},{"size":698,"mtime":1622674531355,"results":"94","hashOfConfig":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cm9gvh",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"u5j952",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"99"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"99"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"99"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"99"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"99"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"99"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"99"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"99"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"D:\\projects\\SocialNetwork\\src\\redux\\store.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Navbar\\Navbar.tsx",[],["199","200"],"D:\\projects\\SocialNetwork\\src\\App.tsx",[],"D:\\projects\\SocialNetwork\\src\\index.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Header\\Header.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["201","202"],"import React, {ChangeEvent, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport {UserProfileType} from \"../../../redux/profile-reducer\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {UserDescription} from './UserDescription/UserDescription';\r\nimport {Layout} from \"antd\";\r\nimport { UserDescriptionForm } from './UserDescriptionForm/UserDescriptionForm';\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: UserProfileType\r\n    status: string | null\r\n    savePhoto: (file: File) => void\r\n    updateStatus: (newStatus: string) => void\r\n    isOwner: boolean\r\n}\r\n\r\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = React.memo(({\r\n                                                                    profile,\r\n                                                                    status,\r\n                                                                    updateStatus,\r\n                                                                    isOwner,\r\n                                                                    savePhoto\r\n                                                                }) => {\r\n\r\n    let [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    if (profile.userId === 0) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <Layout className={classes.profileLayout}>\r\n            {editMode\r\n            && <UserDescriptionForm\r\n                profile={profile}\r\n                toggleEditMode={() => setEditMode(false)}\r\n            />\r\n            || <UserDescription\r\n                toggleEditMode={() => setEditMode(true)}\r\n                profile={profile}\r\n                status={status}\r\n                updateStatus={updateStatus}\r\n                isOwner={isOwner}\r\n                onMainPhotoSelected={onMainPhotoSelected}\r\n            />\r\n            }\r\n\r\n        </Layout>\r\n    );\r\n})\r\n\r\nexport default ProfileInfo;","D:\\projects\\SocialNetwork\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",["203"],"D:\\projects\\SocialNetwork\\src\\components\\Profile\\Profile.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Dialogs\\Dialogs.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\projects\\SocialNetwork\\src\\redux\\dialogs-reducer.ts",["204"],"import {v1} from \"uuid\";\r\nimport {ActionTypes} from \"./action-creators\";\r\nimport {message} from \"antd\";\r\n\r\nexport type MessageType = {\r\n    id: string,\r\n    message: string\r\n}\r\n\r\nexport type DialogsType = {\r\n    id: string,\r\n    name: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 'testDialogId_1', name: 'Dietrich'},\r\n        {id: 'testDialogId_2', name: 'Wolfgang'},\r\n        {id: 'testDialogId_3', name: 'Helen'},\r\n    ],\r\n    messages: {\r\n        'testDialogId_1': [{id: v1(), message: 'Hi!'}, {id: v1(), message: 'How are you?'}, {id: v1(), message: 'Yo'}],\r\n        'testDialogId_2': [{id: v1(), message: 'Greetings!'}],\r\n        'testDialogId_3': []\r\n    }\r\n}\r\n\r\n// type InitialStateType = typeof initialState\r\n\r\ntype InitialStateType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: { [key: string] : Array<MessageType> }\r\n}\r\n\r\nconst dialogsReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SEND-MESSAGE\": {\r\n            if (action.receiverId) {\r\n                return {\r\n                    ...state,\r\n                    messages: {\r\n                        ...state.messages,\r\n                        [action.receiverId]: [...state.messages[action.receiverId], {id: v1(), message: action.message}]\r\n                    }\r\n                    // messages[action.dialogId]: [...state.messages, {id: v1(), message: action.message}]\r\n                }\r\n            }\r\n            return state\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;","D:\\projects\\SocialNetwork\\src\\redux\\profile-reducer.ts",[],"D:\\projects\\SocialNetwork\\src\\components\\Dialogs\\MessageItem\\MessageItem.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],["205","206"],"D:\\projects\\SocialNetwork\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",[],"D:\\projects\\SocialNetwork\\src\\redux\\redux-store.ts",[],"D:\\projects\\SocialNetwork\\src\\redux\\users-reducer.ts",[],"D:\\projects\\SocialNetwork\\src\\components\\Users\\UsersContainer.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Users\\Users.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileContainer.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\common\\Preloader\\Preloader.tsx",["207"],"import preloader from \"./Preloader.module.css\";\r\nimport React from \"react\";\r\nimport {Spin} from \"antd\";\r\n\r\nconst Preloader: React.FC = () => {\r\n    return <div className=\"spin-container\"><Spin size=\"large\" /></div>\r\n    // return <div className={preloader.ldsRing}>\r\n    //     <div></div>\r\n    //     <div></div>\r\n    //     <div></div>\r\n    //     <div></div>\r\n    // </div>\r\n}\r\n\r\nexport default Preloader","D:\\projects\\SocialNetwork\\src\\redux\\auth-reducer.ts",[],"D:\\projects\\SocialNetwork\\src\\components\\Header\\HeaderContainer.tsx",[],"D:\\projects\\SocialNetwork\\src\\api\\api.ts",[],"D:\\projects\\SocialNetwork\\src\\redux\\action-creators.ts",[],"D:\\projects\\SocialNetwork\\src\\hoc\\withAuthRedirect.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\ProfileStatus\\ProfileStatus.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\common\\AddMessageForm\\AddMessageForm.tsx",["208","209","210","211","212","213","214","215","216"],"import * as React from 'react';\r\nimport {\r\n    Formik,\r\n    useField, FormikProps,\r\n} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Button, Form, FormInstance, Input} from \"antd\";\r\nimport TextArea from \"antd/es/input/TextArea\";\r\nimport {KeyboardEventHandler, Ref, useRef} from \"react\";\r\n\r\ntype AddMessagePropsType = {\r\n    dialogId?: string\r\n    sendMessage: (message: string, receiverId?: string) => void\r\n    placeholder: string\r\n}\r\n\r\nexport const AddMessageForm: React.FC<AddMessagePropsType> = ({dialogId, sendMessage, placeholder}) => {\r\n\r\n    const [form] = Form.useForm()\r\n\r\n    const onFinish = (values: { message: string }) => {\r\n        if (values.message !== '') {\r\n            dialogId\r\n                ? sendMessage(values.message, dialogId)\r\n                : sendMessage(values.message)\r\n            form.resetFields()\r\n        }\r\n    }\r\n\r\n    return <Form form={form} name=\"addMessageForm\" initialValues={{message: ''}} onFinish={onFinish}>\r\n        <Form.Item name=\"message\">\r\n            <TextArea placeholder={placeholder} style={{resize: 'none'}}></TextArea>\r\n        </Form.Item>\r\n        <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Send\r\n            </Button>\r\n        </Form.Item>\r\n    </Form>\r\n};","D:\\projects\\SocialNetwork\\src\\redux\\app-reducer.ts",[],"D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\ProfileStatus\\ProfileStatusFunctional.tsx",[],"D:\\projects\\SocialNetwork\\src\\redux\\selectors\\app-selectors.ts",[],"D:\\projects\\SocialNetwork\\src\\redux\\selectors\\profile-selectors.ts",[],"D:\\projects\\SocialNetwork\\src\\redux\\selectors\\auth-selectors.ts",[],"D:\\projects\\SocialNetwork\\src\\redux\\selectors\\users-selectors.ts",[],"D:\\projects\\SocialNetwork\\src\\utils\\object-helpers.ts",[],"D:\\projects\\SocialNetwork\\src\\components\\Login\\Login.tsx",["217","218","219","220","221","222"],"import React, {useEffect} from 'react'\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {getCaptchaUrlTC, login} from \"../../redux/auth-reducer\";\r\nimport styles from \"./Login.module.css\";\r\nimport {getCaptchaUrl, getIsAuth} from \"../../redux/selectors/auth-selectors\";\r\nimport {Button, Checkbox, Form, Input, message, notification} from \"antd\";\r\nimport {action} from \"@storybook/addon-actions\";\r\nimport {actions} from \"../../redux/action-creators\";\r\n\r\n// type FormikErrorType = {\r\n//     email?: string\r\n//     password?: string\r\n//     rememberMe?: boolean\r\n// }\r\n\r\ntype FormValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string | null\r\n}\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector<AppStateType, boolean>(state => getIsAuth(state))\r\n    const captchaUrl = useSelector<AppStateType, string | null>(state => getCaptchaUrl(state))\r\n    const error = useSelector<AppStateType, string | null>(state => state.app.error)\r\n\r\n    useEffect(() => {\r\n        dispatch(getCaptchaUrlTC())\r\n        if(error) message.error(error, 1.5, () => dispatch(actions.setAppError(null)))\r\n    }, [error])\r\n\r\n    const onFinish = (values: FormValuesType) => {\r\n        const {email, password, rememberMe, captcha = null} = values\r\n        dispatch(login(email, password, rememberMe, captcha))\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <Form\r\n        name=\"login\"\r\n        initialValues={{\r\n            remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n    >\r\n        <Form.Item\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            rules={[\r\n                {\r\n                    required: true,\r\n                    message: 'Please enter your email!',\r\n                },\r\n                {\r\n                    type: 'email',\r\n                    message: 'Invalid format. Please, enter an email!'\r\n                }\r\n            ]}\r\n        >\r\n            <Input/>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[\r\n                {\r\n                    required: true,\r\n                    message: 'Please enter your password!',\r\n                },\r\n            ]}\r\n        >\r\n            <Input.Password/>\r\n        </Form.Item>\r\n\r\n        {captchaUrl &&\r\n        <>\r\n            <img src={captchaUrl}/>\r\n            <Form.Item\r\n                label=\"Please, enter text from the picture\"\r\n                name=\"captcha\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please, enter captcha'\r\n                    }\r\n                ]}\r\n            >\r\n\r\n                <Input/>\r\n            </Form.Item>\r\n        </>}\r\n\r\n        <Form.Item name=\"remember\" valuePropName=\"checked\">\r\n            <Checkbox>Remember me</Checkbox>\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form.Item>\r\n    </Form>\r\n}","D:\\projects\\SocialNetwork\\src\\components\\common\\Paginator\\Paginator.tsx",["223"],"import classes from \"./Paginator.module.css\"\r\nimport React, {useState} from \"react\";\r\nimport {inspect} from \"util\";\r\n\r\ntype PaginatorPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nexport const Paginator: React.FC<PaginatorPropsType> = ({totalUsersCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState<number>(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n   return  <div className={classes.paginator}>\r\n       {\r\n           portionNumber > 1 &&\r\n           <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>\r\n       }\r\n       {\r\n           pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n               .map(p => {\r\n                   return <span className={currentPage === p ? classes.selectedPage : classes.pageNotSelected}\r\n                                key={p}\r\n                                onClick={e => onPageChanged((p))}>{p}</span>\r\n               })\r\n       }\r\n       {\r\n           portionCount > portionNumber &&\r\n           <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>\r\n       }\r\n   </div>\r\n}\r\n",["224","225"],"D:\\projects\\SocialNetwork\\src\\components\\Users\\User.tsx",["226"],"import React from \"react\";\r\nimport classes from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport defaultAvatar from \"../../assets/default-user-avatar.jpg\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {Button, Card} from \"antd\";\r\nimport Meta from \"antd/es/card/Meta\";\r\n\r\ntype UsersPropsType = {\r\n    user: UserType\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    followingInProgress: string[]\r\n}\r\n\r\nconst Users: React.FC<UsersPropsType> = ({user, follow, unfollow, followingInProgress}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return <Card\r\n        id={user.id}\r\n        hoverable\r\n        style={{ width: 200, margin: '10px 0' }}\r\n        cover={\r\n            <NavLink to={'/profile/' + user.id}>\r\n                <img className={classes.userPhoto}\r\n                     src={user.photos.small ? user.photos.small : defaultAvatar}\r\n                     alt=\"user avatar\"/>\r\n            </NavLink>\r\n        }>\r\n        <div className={classes.metaWrapper}>\r\n        <Meta title={user.name} description={user.status}/>\r\n            {\r\n                user.followed ?\r\n                    <Button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        dispatch(unfollow(user.id))\r\n                    }\r\n                    }>Unfollow</Button> :\r\n                    <Button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        dispatch(follow(user.id))\r\n                    }\r\n                    }>Follow</Button>\r\n            }\r\n        </div>\r\n    </Card>\r\n}\r\n\r\nexport default Users","D:\\projects\\SocialNetwork\\src\\hoc\\withSuspense.tsx",["227"],"import React, {ComponentType} from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\nimport {Spin} from \"antd\";\r\n\r\nexport function withSuspense<T>(Component: ComponentType<T>) {\r\n    return (props: any) => {\r\n        return (\r\n            <React.Suspense fallback={<Preloader/>}>\r\n                <Component {...props} />\r\n            </React.Suspense>\r\n        );\r\n    }\r\n};\r\n","D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\UserDescription\\UserDescription.tsx",["228","229","230","231","232","233","234","235"],"import React, {ChangeEvent, createRef, useRef} from \"react\";\r\nimport defaultUserAvatar from \"../../../../assets/default-user-avatar.jpg\";\r\nimport {ProfileStatusFunctional} from \"../ProfileStatus/ProfileStatusFunctional\";\r\nimport {savePhoto, UserProfileType} from \"../../../../redux/profile-reducer\";\r\nimport classes from \"./UserDescription.module.css\";\r\nimport {Button, Divider, Dropdown, Layout, Menu, Tabs, Typography} from \"antd\";\r\nimport MyPosts from \"../../MyPosts/MyPosts\";\r\nimport {ContactsTable} from \"./ContactsTable/ContactsTable\";\r\nimport MyPostsContainer from \"../../MyPosts/MyPostsContainer\";\r\n\r\ntype UserDescriptionPropsType = {\r\n    profile: UserProfileType\r\n    onMainPhotoSelected: (e: ChangeEvent<HTMLInputElement>) => void\r\n    isOwner: boolean\r\n    status: string | null\r\n    updateStatus: (newStatus: string) => void\r\n    toggleEditMode: () => void\r\n}\r\n\r\nconst {TabPane} = Tabs\r\n\r\nexport const UserDescription: React.FC<UserDescriptionPropsType> = ({\r\n                                                                        profile,\r\n                                                                        onMainPhotoSelected,\r\n                                                                        isOwner,\r\n                                                                        status,\r\n                                                                        updateStatus,\r\n                                                                        toggleEditMode\r\n                                                                    }) => {\r\n\r\n    const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n    return <div className={classes.userDescription}>\r\n        <div className={classes.descriptionBlock + ' ' + classes.descriptionBlockLeft}>\r\n            <div className={classes.imgWrapper}>\r\n                <img className={classes.userAvatar} src={profile.photos.large || defaultUserAvatar} alt=\"user-avatar\"/>\r\n                {isOwner &&\r\n                    <div className={classes.editButtonsWrapper}>\r\n                        <Button onClick={toggleEditMode}>Edit</Button>\r\n                        <Button onClick={() => inputRef && inputRef.current && inputRef.current.click()}>\r\n                            Upload Photo\r\n                            <input ref={inputRef} hidden type=\"file\" onChange={onMainPhotoSelected}/>\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <Typography>\r\n                <Divider orientation=\"center\" style={{borderTopColor: '#00000054'}}>About me</Divider>\r\n                <Typography.Paragraph\r\n                    className={classes.descriptionBlock_text}>{profile.aboutMe}</Typography.Paragraph>\r\n            </Typography>\r\n            <Typography>\r\n                <Divider orientation=\"center\" style={{borderTopColor: '#00000054'}}>My skills</Divider>\r\n                <Typography.Paragraph\r\n                    className={classes.descriptionBlock_text}>{profile.lookingForAJobDescription || 'none'}</Typography.Paragraph>\r\n            </Typography>\r\n        </div>\r\n        <div className={classes.descriptionBlock + '' + classes.descriptionBlockRight}>\r\n            <Typography className={classes.userNameBlock}>\r\n                <Typography.Title level={1}>{profile.fullName}</Typography.Title>\r\n                <ProfileStatusFunctional status={status} updateStatus={updateStatus}/>\r\n                {profile.lookingForAJob && <Typography.Text type=\"success\" strong>Open to work!</Typography.Text>}\r\n            </Typography>\r\n            <div className={classes.contactsBlock}>\r\n                <Tabs defaultActiveKey=\"1\">\r\n                    <TabPane tab=\"Contacts\" key=\"1\">\r\n                        <ContactsTable contactsData={profile.contacts}/>\r\n                    </TabPane>\r\n                    <TabPane tab={isOwner && \"My posts\" || 'Posts'} key=\"2\">\r\n                        <MyPostsContainer isOwner={isOwner}/>\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\UserDescriptionForm\\UserDescriptionForm.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\common\\WebsiteIcon\\WebsiteIcon.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\common\\VkIcon\\VkIcon.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\UserDescription\\ContactsTable\\ContactsTable.tsx",[],"D:\\projects\\SocialNetwork\\src\\utils\\error-utils.ts",[],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":40,"column":13,"nodeType":"242","messageId":"243","endLine":40,"endColumn":15},{"ruleId":"240","severity":1,"message":"241","line":44,"column":13,"nodeType":"242","messageId":"243","endLine":44,"endColumn":15},{"ruleId":"244","severity":1,"message":"245","line":4,"column":9,"nodeType":"246","messageId":"247","endLine":4,"endColumn":13},{"ruleId":"244","severity":1,"message":"248","line":3,"column":9,"nodeType":"246","messageId":"247","endLine":3,"endColumn":16},{"ruleId":"236","replacedBy":"249"},{"ruleId":"238","replacedBy":"250"},{"ruleId":"244","severity":1,"message":"251","line":1,"column":8,"nodeType":"246","messageId":"247","endLine":1,"endColumn":17},{"ruleId":"244","severity":1,"message":"252","line":3,"column":5,"nodeType":"246","messageId":"247","endLine":3,"endColumn":11},{"ruleId":"244","severity":1,"message":"253","line":4,"column":5,"nodeType":"246","messageId":"247","endLine":4,"endColumn":13},{"ruleId":"244","severity":1,"message":"254","line":4,"column":15,"nodeType":"246","messageId":"247","endLine":4,"endColumn":26},{"ruleId":"244","severity":1,"message":"255","line":6,"column":13,"nodeType":"246","messageId":"247","endLine":6,"endColumn":16},{"ruleId":"244","severity":1,"message":"256","line":7,"column":23,"nodeType":"246","messageId":"247","endLine":7,"endColumn":35},{"ruleId":"244","severity":1,"message":"257","line":7,"column":37,"nodeType":"246","messageId":"247","endLine":7,"endColumn":42},{"ruleId":"244","severity":1,"message":"258","line":9,"column":9,"nodeType":"246","messageId":"247","endLine":9,"endColumn":29},{"ruleId":"244","severity":1,"message":"259","line":9,"column":31,"nodeType":"246","messageId":"247","endLine":9,"endColumn":34},{"ruleId":"244","severity":1,"message":"260","line":9,"column":36,"nodeType":"246","messageId":"247","endLine":9,"endColumn":42},{"ruleId":"244","severity":1,"message":"261","line":2,"column":9,"nodeType":"246","messageId":"247","endLine":2,"endColumn":18},{"ruleId":"244","severity":1,"message":"262","line":7,"column":8,"nodeType":"246","messageId":"247","endLine":7,"endColumn":14},{"ruleId":"244","severity":1,"message":"263","line":9,"column":49,"nodeType":"246","messageId":"247","endLine":9,"endColumn":61},{"ruleId":"244","severity":1,"message":"264","line":10,"column":9,"nodeType":"246","messageId":"247","endLine":10,"endColumn":15},{"ruleId":"265","severity":1,"message":"266","line":36,"column":8,"nodeType":"267","endLine":36,"endColumn":15,"suggestions":"268"},{"ruleId":"269","severity":1,"message":"270","line":86,"column":13,"nodeType":"271","endLine":86,"endColumn":36},{"ruleId":"244","severity":1,"message":"272","line":3,"column":9,"nodeType":"246","messageId":"247","endLine":3,"endColumn":16},{"ruleId":"236","replacedBy":"273"},{"ruleId":"238","replacedBy":"274"},{"ruleId":"244","severity":1,"message":"275","line":7,"column":9,"nodeType":"246","messageId":"247","endLine":7,"endColumn":18},{"ruleId":"244","severity":1,"message":"276","line":3,"column":9,"nodeType":"246","messageId":"247","endLine":3,"endColumn":13},{"ruleId":"244","severity":1,"message":"277","line":1,"column":29,"nodeType":"246","messageId":"247","endLine":1,"endColumn":38},{"ruleId":"244","severity":1,"message":"278","line":4,"column":9,"nodeType":"246","messageId":"247","endLine":4,"endColumn":18},{"ruleId":"244","severity":1,"message":"279","line":6,"column":26,"nodeType":"246","messageId":"247","endLine":6,"endColumn":34},{"ruleId":"244","severity":1,"message":"280","line":6,"column":36,"nodeType":"246","messageId":"247","endLine":6,"endColumn":42},{"ruleId":"244","severity":1,"message":"281","line":6,"column":44,"nodeType":"246","messageId":"247","endLine":6,"endColumn":48},{"ruleId":"244","severity":1,"message":"282","line":7,"column":8,"nodeType":"246","messageId":"247","endLine":7,"endColumn":15},{"ruleId":"240","severity":1,"message":"241","line":69,"column":43,"nodeType":"242","messageId":"243","endLine":69,"endColumn":45},{"ruleId":"240","severity":1,"message":"241","line":69,"column":57,"nodeType":"242","messageId":"243","endLine":69,"endColumn":59},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","@typescript-eslint/no-unused-vars","'Tabs' is defined but never used.","Identifier","unusedVar","'message' is defined but never used.",["283"],["284"],"'preloader' is defined but never used.","'Formik' is defined but never used.","'useField' is defined but never used.","'FormikProps' is defined but never used.","'Yup' is defined but never used.","'FormInstance' is defined but never used.","'Input' is defined but never used.","'KeyboardEventHandler' is defined but never used.","'Ref' is defined but never used.","'useRef' is defined but never used.","'useFormik' is defined but never used.","'styles' is defined but never used.","'notification' is defined but never used.","'action' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["285"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'inspect' is defined but never used.",["283"],["284"],"'Paginator' is defined but never used.","'Spin' is defined but never used.","'createRef' is defined but never used.","'savePhoto' is defined but never used.","'Dropdown' is defined but never used.","'Layout' is defined but never used.","'Menu' is defined but never used.","'MyPosts' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"286","fix":"287"},"Update the dependencies array to be: [dispatch, error]",{"range":"288","text":"289"},[1326,1333],"[dispatch, error]"]