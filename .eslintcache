[{"D:\\projects\\SocialNetwork\\src\\redux\\store.tsx":"1","D:\\projects\\SocialNetwork\\src\\components\\Navbar\\Navbar.tsx":"2","D:\\projects\\SocialNetwork\\src\\App.tsx":"3","D:\\projects\\SocialNetwork\\src\\index.tsx":"4","D:\\projects\\SocialNetwork\\src\\components\\Header\\Header.tsx":"5","D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"6","D:\\projects\\SocialNetwork\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"7","D:\\projects\\SocialNetwork\\src\\components\\Profile\\Profile.tsx":"8","D:\\projects\\SocialNetwork\\src\\components\\Dialogs\\Dialogs.tsx":"9","D:\\projects\\SocialNetwork\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"10","D:\\projects\\SocialNetwork\\src\\redux\\dialogs-reducer.ts":"11","D:\\projects\\SocialNetwork\\src\\redux\\profile-reducer.ts":"12","D:\\projects\\SocialNetwork\\src\\components\\Dialogs\\MessageItem\\MessageItem.tsx":"13","D:\\projects\\SocialNetwork\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"14","D:\\projects\\SocialNetwork\\src\\components\\Dialogs\\DialogsContainer.tsx":"15","D:\\projects\\SocialNetwork\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"16","D:\\projects\\SocialNetwork\\src\\redux\\redux-store.ts":"17","D:\\projects\\SocialNetwork\\src\\redux\\users-reducer.ts":"18","D:\\projects\\SocialNetwork\\src\\components\\Users\\UsersContainer.tsx":"19","D:\\projects\\SocialNetwork\\src\\components\\Users\\Users.tsx":"20","D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileContainer.tsx":"21","D:\\projects\\SocialNetwork\\src\\components\\common\\Preloader\\Preloader.tsx":"22","D:\\projects\\SocialNetwork\\src\\components\\common\\MessagesIcon\\MessagesIcon.tsx":"23","D:\\projects\\SocialNetwork\\src\\components\\common\\ProfileIcon\\ProfileIcon.tsx":"24","D:\\projects\\SocialNetwork\\src\\components\\common\\UsersIcon\\UsersIcon.tsx":"25","D:\\projects\\SocialNetwork\\src\\components\\common\\NewsIcon\\NewsIcon.tsx":"26","D:\\projects\\SocialNetwork\\src\\components\\common\\MusicIcon\\MusicIcon.tsx":"27","D:\\projects\\SocialNetwork\\src\\redux\\auth-reducer.ts":"28","D:\\projects\\SocialNetwork\\src\\components\\Header\\HeaderContainer.tsx":"29","D:\\projects\\SocialNetwork\\src\\api\\api.ts":"30","D:\\projects\\SocialNetwork\\src\\redux\\action-creators.ts":"31","D:\\projects\\SocialNetwork\\src\\hoc\\withAuthRedirect.tsx":"32","D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\ProfileStatus\\ProfileStatus.tsx":"33","D:\\projects\\SocialNetwork\\src\\components\\common\\AddMessageForm\\AddMessageForm.tsx":"34","D:\\projects\\SocialNetwork\\src\\redux\\app-reducer.ts":"35","D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\ProfileStatus\\ProfileStatusFunctional.tsx":"36","D:\\projects\\SocialNetwork\\src\\redux\\selectors\\app-selectors.ts":"37","D:\\projects\\SocialNetwork\\src\\redux\\selectors\\profile-selectors.ts":"38","D:\\projects\\SocialNetwork\\src\\redux\\selectors\\auth-selectors.ts":"39","D:\\projects\\SocialNetwork\\src\\redux\\selectors\\users-selectors.ts":"40","D:\\projects\\SocialNetwork\\src\\utils\\object-helpers.ts":"41","D:\\projects\\SocialNetwork\\src\\components\\Login\\Login.tsx":"42","D:\\projects\\SocialNetwork\\src\\components\\common\\Paginator\\Paginator.tsx":"43","D:\\projects\\SocialNetwork\\src\\components\\Users\\User.tsx":"44","D:\\projects\\SocialNetwork\\src\\hoc\\withSuspense.tsx":"45","D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\UserDescription\\UserDescription.tsx":"46","D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\UserDescriptionForm\\UserDescriptionForm.tsx":"47","D:\\projects\\SocialNetwork\\src\\AppAntd.tsx":"48","D:\\projects\\SocialNetwork\\src\\components\\common\\WebsiteIcon\\WebsiteIcon.tsx":"49","D:\\projects\\SocialNetwork\\src\\components\\common\\VkIcon\\VkIcon.tsx":"50","D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\UserDescription\\ContactsTable\\ContactsTable.tsx":"51","D:\\projects\\SocialNetwork\\src\\utils\\error-utils.ts":"52"},{"size":2822,"mtime":1613805542763,"results":"53","hashOfConfig":"54"},{"size":1374,"mtime":1622580259661,"results":"55","hashOfConfig":"56"},{"size":2768,"mtime":1622580259649,"results":"57","hashOfConfig":"56"},{"size":280,"mtime":1622667649980,"results":"58","hashOfConfig":"56"},{"size":732,"mtime":1622580259656,"results":"59","hashOfConfig":"56"},{"size":2070,"mtime":1622580259671,"results":"60","hashOfConfig":"56"},{"size":483,"mtime":1619906732631,"results":"61","hashOfConfig":"56"},{"size":667,"mtime":1622580259665,"results":"62","hashOfConfig":"56"},{"size":1429,"mtime":1619906732631,"results":"63","hashOfConfig":"56"},{"size":1559,"mtime":1622666107759,"results":"64","hashOfConfig":"56"},{"size":1097,"mtime":1617744371272,"results":"65","hashOfConfig":"56"},{"size":3738,"mtime":1621892385494,"results":"66","hashOfConfig":"56"},{"size":361,"mtime":1619906732646,"results":"67","hashOfConfig":"56"},{"size":574,"mtime":1619904328917,"results":"68","hashOfConfig":"56"},{"size":1387,"mtime":1618726890002,"results":"69","hashOfConfig":"56"},{"size":438,"mtime":1619904501144,"results":"70","hashOfConfig":"56"},{"size":914,"mtime":1620943567675,"results":"71","hashOfConfig":"56"},{"size":3697,"mtime":1620942596765,"results":"72","hashOfConfig":"56"},{"size":2869,"mtime":1620943013525,"results":"73","hashOfConfig":"56"},{"size":1458,"mtime":1620942752612,"results":"74","hashOfConfig":"56"},{"size":2726,"mtime":1621717707915,"results":"75","hashOfConfig":"56"},{"size":289,"mtime":1615569722215,"results":"76","hashOfConfig":"56"},{"size":2623,"mtime":1615628482034,"results":"77","hashOfConfig":"56"},{"size":1499,"mtime":1615629163346,"results":"78","hashOfConfig":"56"},{"size":3550,"mtime":1615630795334,"results":"79","hashOfConfig":"56"},{"size":3743,"mtime":1622580259679,"results":"80","hashOfConfig":"56"},{"size":1337,"mtime":1622580259678,"results":"81","hashOfConfig":"56"},{"size":2632,"mtime":1622675770781,"results":"82","hashOfConfig":"56"},{"size":1035,"mtime":1618726890074,"results":"83","hashOfConfig":"56"},{"size":2893,"mtime":1622674531402,"results":"84","hashOfConfig":"56"},{"size":1961,"mtime":1622674153771,"results":"85","hashOfConfig":"56"},{"size":812,"mtime":1618347892774,"results":"86","hashOfConfig":"56"},{"size":1438,"mtime":1617572355297,"results":"87","hashOfConfig":"54"},{"size":2255,"mtime":1622581219650,"results":"88","hashOfConfig":"56"},{"size":1153,"mtime":1622674153752,"results":"89","hashOfConfig":"56"},{"size":1166,"mtime":1622580259672,"results":"90","hashOfConfig":"56"},{"size":150,"mtime":1618726890065,"results":"91","hashOfConfig":"56"},{"size":308,"mtime":1618726889997,"results":"92","hashOfConfig":"56"},{"size":461,"mtime":1622580259684,"results":"93","hashOfConfig":"56"},{"size":741,"mtime":1620942596738,"results":"94","hashOfConfig":"56"},{"size":195,"mtime":1620941324870,"results":"95","hashOfConfig":"56"},{"size":5101,"mtime":1622676103227,"results":"96","hashOfConfig":"56"},{"size":1606,"mtime":1621210534309,"results":"97","hashOfConfig":"56"},{"size":1968,"mtime":1620942596754,"results":"98","hashOfConfig":"56"},{"size":376,"mtime":1621461789153,"results":"99","hashOfConfig":"56"},{"size":4540,"mtime":1622666177255,"results":"100","hashOfConfig":"56"},{"size":8195,"mtime":1622580259677,"results":"101","hashOfConfig":"56"},{"size":4166,"mtime":1622672747389,"results":"102","hashOfConfig":"56"},{"size":3382,"mtime":1622580259681,"results":"103","hashOfConfig":"56"},{"size":1854,"mtime":1622580259680,"results":"104","hashOfConfig":"56"},{"size":2096,"mtime":1622580259673,"results":"105","hashOfConfig":"56"},{"size":698,"mtime":1622674531355,"results":"106","hashOfConfig":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cm9gvh",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"u5j952",{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"111"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"111"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"111"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"111"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"111"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"111"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"111"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"D:\\projects\\SocialNetwork\\src\\redux\\store.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Navbar\\Navbar.tsx",[],["220","221"],"D:\\projects\\SocialNetwork\\src\\App.tsx",[],"D:\\projects\\SocialNetwork\\src\\index.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Header\\Header.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["222","223"],"import React, {ChangeEvent, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport {UserProfileType} from \"../../../redux/profile-reducer\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {UserDescription} from './UserDescription/UserDescription';\r\nimport {Layout} from \"antd\";\r\nimport { UserDescriptionForm } from './UserDescriptionForm/UserDescriptionForm';\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: UserProfileType\r\n    status: string | null\r\n    savePhoto: (file: File) => void\r\n    updateStatus: (newStatus: string) => void\r\n    isOwner: boolean\r\n}\r\n\r\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = React.memo(({\r\n                                                                    profile,\r\n                                                                    status,\r\n                                                                    updateStatus,\r\n                                                                    isOwner,\r\n                                                                    savePhoto\r\n                                                                }) => {\r\n\r\n    let [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    if (profile.userId === 0) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <Layout className={classes.profileLayout}>\r\n            {editMode\r\n            && <UserDescriptionForm\r\n                profile={profile}\r\n                toggleEditMode={() => setEditMode(false)}\r\n            />\r\n            || <UserDescription\r\n                toggleEditMode={() => setEditMode(true)}\r\n                profile={profile}\r\n                status={status}\r\n                updateStatus={updateStatus}\r\n                isOwner={isOwner}\r\n                onMainPhotoSelected={onMainPhotoSelected}\r\n            />\r\n            }\r\n\r\n        </Layout>\r\n    );\r\n})\r\n\r\nexport default ProfileInfo;","D:\\projects\\SocialNetwork\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Profile\\Profile.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Dialogs\\Dialogs.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\projects\\SocialNetwork\\src\\redux\\dialogs-reducer.ts",[],"D:\\projects\\SocialNetwork\\src\\redux\\profile-reducer.ts",[],"D:\\projects\\SocialNetwork\\src\\components\\Dialogs\\MessageItem\\MessageItem.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],["224","225"],"D:\\projects\\SocialNetwork\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",[],"D:\\projects\\SocialNetwork\\src\\redux\\redux-store.ts",[],"D:\\projects\\SocialNetwork\\src\\redux\\users-reducer.ts",[],"D:\\projects\\SocialNetwork\\src\\components\\Users\\UsersContainer.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Users\\Users.tsx",["226"],"import React from \"react\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\ntype UsersPropsType = {\r\n    users: UserType[]\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    followingInProgress: string[]\r\n}\r\n\r\nconst Users: React.FC<UsersPropsType> = ({\r\n                                             users,\r\n                                             totalUsersCount,\r\n                                             pageSize,\r\n                                             currentPage,\r\n                                             unfollow,\r\n                                             follow,\r\n                                             onPageChanged,\r\n                                             followingInProgress,\r\n                                         }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged} pageSize={pageSize} totalUsersCount={totalUsersCount}/>\r\n        {\r\n            users.map(user => <User key={user.id} user={user} follow={follow} unfollow={unfollow} followingInProgress={followingInProgress}/>)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users","D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileContainer.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\common\\Preloader\\Preloader.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\common\\MessagesIcon\\MessagesIcon.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\common\\ProfileIcon\\ProfileIcon.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\common\\UsersIcon\\UsersIcon.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\common\\NewsIcon\\NewsIcon.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\common\\MusicIcon\\MusicIcon.tsx",[],"D:\\projects\\SocialNetwork\\src\\redux\\auth-reducer.ts",[],"D:\\projects\\SocialNetwork\\src\\components\\Header\\HeaderContainer.tsx",[],"D:\\projects\\SocialNetwork\\src\\api\\api.ts",[],"D:\\projects\\SocialNetwork\\src\\redux\\action-creators.ts",[],"D:\\projects\\SocialNetwork\\src\\hoc\\withAuthRedirect.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\ProfileStatus\\ProfileStatus.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\common\\AddMessageForm\\AddMessageForm.tsx",["227","228","229","230","231","232","233","234","235"],"import * as React from 'react';\r\nimport {\r\n    Formik,\r\n    useField, FormikProps,\r\n} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Button, Form, FormInstance, Input} from \"antd\";\r\nimport TextArea from \"antd/es/input/TextArea\";\r\nimport {KeyboardEventHandler, Ref, useRef} from \"react\";\r\n\r\ntype AddMessagePropsType = {\r\n    sendMessage: (message: string) => void\r\n    placeholder: string\r\n}\r\n\r\nexport const AddMessageForm: React.FC<AddMessagePropsType> = ({sendMessage, placeholder}) => {\r\n    // const initialValues: MyFormValues = {message: ''};\r\n    // return (\r\n    //     <div>\r\n    //         <Formik\r\n    //             initialValues={initialValues}\r\n    //             validationSchema={MessageValidationSchema}\r\n    //             onSubmit={(values, formikHelpers) => {\r\n    //                 sendMessage(values.message)\r\n    //                 formikHelpers.resetForm()\r\n    //             }}\r\n    //             render={({handleSubmit}: FormikProps<MyFormValues>) => {\r\n    //                 return <form\r\n    //                     onSubmit={handleSubmit}\r\n    //                     onKeyDown={(e) => {\r\n    //                         if (e.key === 'Enter' && !e.shiftKey) {\r\n    //                             e.preventDefault()\r\n    //                             handleSubmit();\r\n    //                         }\r\n    //                     }}>\r\n    //                     <MyTextArea name=\"message\" placeholder={placeholder}/>\r\n    //                     <button type=\"submit\">Submit</button>\r\n    //                 </form>\r\n    //             }}\r\n    //         />\r\n    //     </div>\r\n    // );\r\n\r\n    const [form] = Form.useForm()\r\n\r\n    const onFinish = (values: { message: string }) => {\r\n        if (values.message !== '') {\r\n            sendMessage(values.message)\r\n            form.resetFields()\r\n        }\r\n    }\r\n\r\n    return <Form form={form} name=\"addMessageForm\" initialValues={{message: ''}} onFinish={onFinish}>\r\n        <Form.Item name=\"message\">\r\n            <TextArea placeholder={placeholder} style={{resize: 'none'}}></TextArea>\r\n        </Form.Item>\r\n        <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Send\r\n            </Button>\r\n        </Form.Item>\r\n    </Form>\r\n};","D:\\projects\\SocialNetwork\\src\\redux\\app-reducer.ts",[],"D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\ProfileStatus\\ProfileStatusFunctional.tsx",[],"D:\\projects\\SocialNetwork\\src\\redux\\selectors\\app-selectors.ts",[],"D:\\projects\\SocialNetwork\\src\\redux\\selectors\\profile-selectors.ts",[],"D:\\projects\\SocialNetwork\\src\\redux\\selectors\\auth-selectors.ts",[],"D:\\projects\\SocialNetwork\\src\\redux\\selectors\\users-selectors.ts",[],"D:\\projects\\SocialNetwork\\src\\utils\\object-helpers.ts",[],"D:\\projects\\SocialNetwork\\src\\components\\Login\\Login.tsx",["236","237","238","239","240","241","242","243"],"D:\\projects\\SocialNetwork\\src\\components\\common\\Paginator\\Paginator.tsx",["244"],"import classes from \"./Paginator.module.css\"\r\nimport React, {useState} from \"react\";\r\nimport {inspect} from \"util\";\r\n\r\ntype PaginatorPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nexport const Paginator: React.FC<PaginatorPropsType> = ({totalUsersCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState<number>(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n   return  <div className={classes.paginator}>\r\n       {\r\n           portionNumber > 1 &&\r\n           <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>\r\n       }\r\n       {\r\n           pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n               .map(p => {\r\n                   return <span className={currentPage === p ? classes.selectedPage : classes.pageNotSelected}\r\n                                key={p}\r\n                                onClick={e => onPageChanged((p))}>{p}</span>\r\n               })\r\n       }\r\n       {\r\n           portionCount > portionNumber &&\r\n           <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>\r\n       }\r\n   </div>\r\n}\r\n","D:\\projects\\SocialNetwork\\src\\components\\Users\\User.tsx",["245"],"import React from \"react\";\r\nimport classes from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport defaultAvatar from \"../../assets/default-user-avatar.jpg\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\n\r\ntype UsersPropsType = {\r\n    user: UserType\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    followingInProgress: string[]\r\n}\r\n\r\nconst Users: React.FC<UsersPropsType> = ({user, follow, unfollow, followingInProgress}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return <div key={user.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <img className={classes.userPhoto} src={user.photos.small ? user.photos.small : defaultAvatar}\r\n                                 alt=\"user avatar\"/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            user.followed ?\r\n                                <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                    dispatch(unfollow(user.id))\r\n                                }\r\n                                }>Unfollow</button> :\r\n                                <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                    dispatch(follow(user.id))\r\n                                }\r\n                                }>Follow</button>\r\n                        }\r\n                    </div>\r\n                </span>\r\n        <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                </span>\r\n    </div>\r\n}\r\n\r\nexport default Users","D:\\projects\\SocialNetwork\\src\\hoc\\withSuspense.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\UserDescription\\UserDescription.tsx",["246","247","248","249","250","251","252","253"],"import React, {ChangeEvent, createRef, useRef} from \"react\";\r\nimport defaultUserAvatar from \"../../../../assets/default-user-avatar.jpg\";\r\nimport {ProfileStatusFunctional} from \"../ProfileStatus/ProfileStatusFunctional\";\r\nimport {savePhoto, UserProfileType} from \"../../../../redux/profile-reducer\";\r\nimport classes from \"./UserDescription.module.css\";\r\nimport {Button, Divider, Dropdown, Layout, Menu, Tabs, Typography} from \"antd\";\r\nimport MyPosts from \"../../MyPosts/MyPosts\";\r\nimport {ContactsTable} from \"./ContactsTable/ContactsTable\";\r\nimport MyPostsContainer from \"../../MyPosts/MyPostsContainer\";\r\n\r\ntype UserDescriptionPropsType = {\r\n    profile: UserProfileType\r\n    onMainPhotoSelected: (e: ChangeEvent<HTMLInputElement>) => void\r\n    isOwner: boolean\r\n    status: string | null\r\n    updateStatus: (newStatus: string) => void\r\n    toggleEditMode: () => void\r\n}\r\n\r\nconst {TabPane} = Tabs\r\n\r\nexport const UserDescription: React.FC<UserDescriptionPropsType> = ({\r\n                                                                        profile,\r\n                                                                        onMainPhotoSelected,\r\n                                                                        isOwner,\r\n                                                                        status,\r\n                                                                        updateStatus,\r\n                                                                        toggleEditMode\r\n                                                                    }) => {\r\n\r\n    const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n    const editUserDescriptionMenu = (\r\n        <Menu>\r\n            <Menu.Item key=\"1\" style={{textAlign: 'center'}}><Button onClick={toggleEditMode}>Edit</Button></Menu.Item>\r\n            <Menu.Item key=\"2\">\r\n                <Button onClick={() => inputRef && inputRef.current && inputRef.current.click()}>\r\n                    Upload Photo\r\n                    <input ref={inputRef} hidden type=\"file\" onChange={onMainPhotoSelected}/>\r\n                </Button>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    return <div className={classes.userDescription}>\r\n        <div className={classes.descriptionBlock + ' ' + classes.descriptionBlockLeft}>\r\n            <div className={classes.imgWrapper}>\r\n                {isOwner &&\r\n                <Dropdown overlay={editUserDescriptionMenu} trigger={['contextMenu']}>\r\n                    <img className={classes.userAvatar} src={profile.photos.large || defaultUserAvatar}\r\n                         alt=\"user-avatar\"/>\r\n                </Dropdown>\r\n                    || <img className={classes.userAvatar} src={profile.photos.large || defaultUserAvatar}\r\n                    alt=\"user-avatar\"/>\r\n                }\r\n                {isOwner && <Typography.Text underline>Right click on photo to edit profile</Typography.Text>}\r\n            </div>\r\n            <Typography>\r\n                <Divider orientation=\"center\" style={{borderTopColor: '#00000054'}}>About me</Divider>\r\n                <Typography.Paragraph\r\n                    className={classes.descriptionBlock_text}>{profile.aboutMe}</Typography.Paragraph>\r\n            </Typography>\r\n            <Typography>\r\n                <Divider orientation=\"center\" style={{borderTopColor: '#00000054'}}>My skills</Divider>\r\n                <Typography.Paragraph\r\n                    className={classes.descriptionBlock_text}>{profile.lookingForAJobDescription || 'none'}</Typography.Paragraph>\r\n            </Typography>\r\n        </div>\r\n        <div className={classes.descriptionBlock + '' + classes.descriptionBlockRight}>\r\n            <Typography className={classes.userNameBlock}>\r\n                <Typography.Title level={1}>{profile.fullName}</Typography.Title>\r\n                <ProfileStatusFunctional status={status} updateStatus={updateStatus}/>\r\n                {profile.lookingForAJob && <Typography.Text type=\"success\" strong>Open to work!</Typography.Text>}\r\n            </Typography>\r\n            <div className={classes.contactsBlock}>\r\n                <Tabs defaultActiveKey=\"1\">\r\n                    <TabPane tab=\"Contacts\" key=\"1\">\r\n                        <ContactsTable contactsData={profile.contacts}/>\r\n                    </TabPane>\r\n                    <TabPane tab={isOwner && \"My posts\" || 'Posts'} key=\"2\">\r\n                        <MyPostsContainer isOwner={isOwner}/>\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\UserDescriptionForm\\UserDescriptionForm.tsx",[],"D:\\projects\\SocialNetwork\\src\\AppAntd.tsx",["254","255"],"import React from 'react';\r\nimport './App.scss';\r\nimport './components/Header/Header.module.css'\r\nimport './components/Navbar/Navbar.module.css'\r\nimport './components/Profile/Profile.module.css'\r\nimport {HashRouter, Route, withRouter, Switch, Redirect} from \"react-router-dom\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport store, {AppStateType} from \"./redux/redux-store\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport {getInitialized} from \"./redux/selectors/app-selectors\";\r\nimport {Breadcrumb, Layout, Menu} from \"antd\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport {Login} from \"./components/Login/Login\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    initialized: boolean\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    initializeApp: () => void\r\n}\r\n\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass App extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    state = {\r\n        collapsed: false,\r\n    };\r\n\r\n    onCollapse = (collapsed: boolean) => {\r\n        this.setState({ collapsed });\r\n    };\r\n\r\n    render() {\r\n        const { collapsed } = this.state;\r\n        return (\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n                <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\r\n                    <div className=\"logo\" />\r\n                    <Navbar/>\r\n                </Sider>\r\n                <Layout className=\"site-layout\">\r\n                    <Header className=\"site-layout-background\" style={{ padding: 0 }} >\r\n                        <HeaderContainer/>\r\n                    </Header>\r\n                    <Content style={{ margin: '0 16px' }}>\r\n                        <Breadcrumb style={{ margin: '16px 0' }}>\r\n                            <Breadcrumb.Item>User</Breadcrumb.Item>\r\n                            <Breadcrumb.Item>Bill</Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                        <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n                            <Switch>\r\n                                <Route exact path='/' render={() => <Redirect to={'/profile'}/>}/>\r\n                                <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\r\n                                <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\r\n                                <Route path='/users' render={() => <UsersContainer/>}/>\r\n                                <Route path='/login' render={() => <Login/>}/>\r\n                                <Route path='*' render={() => <div>404 NOT FOUND</div>}/></Switch>\r\n                        </div>\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center' }}>Social Network ©2021 Created by nikita11044</Footer>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        initialized: getInitialized(state)\r\n    }\r\n}\r\n\r\n// export default compose<React.ComponentType>(\r\n//     withRouter,\r\n//     connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {initializeApp}))(App)\r\n\r\nlet AppContainer = compose<React.ComponentType>(\r\n    withRouter,\r\n    connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {initializeApp}))(App)\r\n\r\nlet SocialNetworkAppAntd = () => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\nexport default SocialNetworkAppAntd","D:\\projects\\SocialNetwork\\src\\components\\common\\WebsiteIcon\\WebsiteIcon.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\common\\VkIcon\\VkIcon.tsx",[],"D:\\projects\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\UserDescription\\ContactsTable\\ContactsTable.tsx",[],"D:\\projects\\SocialNetwork\\src\\utils\\error-utils.ts",[],{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","severity":1,"message":"261","line":40,"column":13,"nodeType":"262","messageId":"263","endLine":40,"endColumn":15},{"ruleId":"260","severity":1,"message":"261","line":44,"column":13,"nodeType":"262","messageId":"263","endLine":44,"endColumn":15},{"ruleId":"256","replacedBy":"264"},{"ruleId":"258","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":29,"column":11,"nodeType":"268","messageId":"269","endLine":29,"endColumn":19},{"ruleId":"266","severity":1,"message":"270","line":3,"column":5,"nodeType":"268","messageId":"269","endLine":3,"endColumn":11},{"ruleId":"266","severity":1,"message":"271","line":4,"column":5,"nodeType":"268","messageId":"269","endLine":4,"endColumn":13},{"ruleId":"266","severity":1,"message":"272","line":4,"column":15,"nodeType":"268","messageId":"269","endLine":4,"endColumn":26},{"ruleId":"266","severity":1,"message":"273","line":6,"column":13,"nodeType":"268","messageId":"269","endLine":6,"endColumn":16},{"ruleId":"266","severity":1,"message":"274","line":7,"column":23,"nodeType":"268","messageId":"269","endLine":7,"endColumn":35},{"ruleId":"266","severity":1,"message":"275","line":7,"column":37,"nodeType":"268","messageId":"269","endLine":7,"endColumn":42},{"ruleId":"266","severity":1,"message":"276","line":9,"column":9,"nodeType":"268","messageId":"269","endLine":9,"endColumn":29},{"ruleId":"266","severity":1,"message":"277","line":9,"column":31,"nodeType":"268","messageId":"269","endLine":9,"endColumn":34},{"ruleId":"266","severity":1,"message":"278","line":9,"column":36,"nodeType":"268","messageId":"269","endLine":9,"endColumn":42},{"ruleId":"266","severity":1,"message":"279","line":2,"column":9,"nodeType":"268","messageId":"269","endLine":2,"endColumn":18},{"ruleId":"266","severity":1,"message":"280","line":7,"column":8,"nodeType":"268","messageId":"269","endLine":7,"endColumn":14},{"ruleId":"266","severity":1,"message":"281","line":9,"column":40,"nodeType":"268","messageId":"269","endLine":9,"endColumn":47},{"ruleId":"266","severity":1,"message":"282","line":10,"column":9,"nodeType":"268","messageId":"269","endLine":10,"endColumn":15},{"ruleId":"266","severity":1,"message":"283","line":11,"column":9,"nodeType":"268","messageId":"269","endLine":11,"endColumn":16},{"ruleId":"266","severity":1,"message":"284","line":31,"column":11,"nodeType":"268","messageId":"269","endLine":31,"endColumn":16},{"ruleId":"285","severity":1,"message":"286","line":35,"column":8,"nodeType":"287","endLine":35,"endColumn":10,"suggestions":"288"},{"ruleId":"289","severity":1,"message":"290","line":131,"column":13,"nodeType":"291","endLine":131,"endColumn":36},{"ruleId":"266","severity":1,"message":"292","line":3,"column":9,"nodeType":"268","messageId":"269","endLine":3,"endColumn":16},{"ruleId":"266","severity":1,"message":"293","line":7,"column":9,"nodeType":"268","messageId":"269","endLine":7,"endColumn":18},{"ruleId":"266","severity":1,"message":"294","line":1,"column":29,"nodeType":"268","messageId":"269","endLine":1,"endColumn":38},{"ruleId":"266","severity":1,"message":"295","line":4,"column":9,"nodeType":"268","messageId":"269","endLine":4,"endColumn":18},{"ruleId":"266","severity":1,"message":"296","line":6,"column":36,"nodeType":"268","messageId":"269","endLine":6,"endColumn":42},{"ruleId":"266","severity":1,"message":"297","line":7,"column":8,"nodeType":"268","messageId":"269","endLine":7,"endColumn":15},{"ruleId":"260","severity":1,"message":"261","line":48,"column":26,"nodeType":"262","messageId":"263","endLine":48,"endColumn":28},{"ruleId":"260","severity":1,"message":"261","line":53,"column":21,"nodeType":"262","messageId":"263","endLine":53,"endColumn":23},{"ruleId":"260","severity":1,"message":"261","line":80,"column":43,"nodeType":"262","messageId":"263","endLine":80,"endColumn":45},{"ruleId":"260","severity":1,"message":"261","line":80,"column":57,"nodeType":"262","messageId":"263","endLine":80,"endColumn":59},{"ruleId":"266","severity":1,"message":"298","line":10,"column":8,"nodeType":"268","messageId":"269","endLine":10,"endColumn":17},{"ruleId":"266","severity":1,"message":"299","line":13,"column":29,"nodeType":"268","messageId":"269","endLine":13,"endColumn":33},"no-native-reassign",["300"],"no-negated-in-lhs",["301"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator",["300"],["301"],"@typescript-eslint/no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'Formik' is defined but never used.","'useField' is defined but never used.","'FormikProps' is defined but never used.","'Yup' is defined but never used.","'FormInstance' is defined but never used.","'Input' is defined but never used.","'KeyboardEventHandler' is defined but never used.","'Ref' is defined but never used.","'useRef' is defined but never used.","'useFormik' is defined but never used.","'styles' is defined but never used.","'message' is defined but never used.","'action' is defined but never used.","'actions' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["302"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'inspect' is defined but never used.","'Paginator' is defined but never used.","'createRef' is defined but never used.","'savePhoto' is defined but never used.","'Layout' is defined but never used.","'MyPosts' is defined but never used.","'Preloader' is defined but never used.","'Menu' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"303","fix":"304"},"Update the dependencies array to be: [dispatch]",{"range":"305","text":"306"},[1224,1226],"[dispatch]"]